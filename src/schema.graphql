input CreateUserInput {
  name: String!
  email: String!
  age: Int
}

input CreateDiscussionInput {
  title: String!
  body: String!
  published: Boolean!
  authorId: ID!
}

input CreateCommentInput {
  text: String!
  authorId: ID!
  discussion: ID!
}

type Mutation {
  createUser(data: CreateUserInput): User!
  createDiscussion(data: CreateDiscussionInput): Discussion!
  createRootComment(data: CreateCommentInput): Comment!
  createChildComment(data: CreateCommentInput): Comment!
  deleteComment(id: ID): Comment!
  deleteUser(id: ID): User!
  deleteDiscussion(id: ID): Discussion!
}

type Query {
  users(query: String): [User!]!
  discussions(query: String): [Discussion!]!
  comments(query: String): [Comment!]!
  getDiscussion(id: ID): Discussion!
  getUser(id: ID): User!
  getComment(id: ID): Comment!
}

type User {
  id: ID!
  name: String!
  email: String!
  age: Int
  discussions: [Discussion]!
  comments: [Comment]!
}

type Discussion {
  id: ID!
  title: String!
  body: String!
  published: Boolean!
  authorId: User!
  rootComments: [Comment]!
}

type Comment {
  id: ID!
  text: String!
  authorId: User!
  discussionId: Discussion!
  parentCommentId: ID
  childComments: [Comment]!
}
